fcol <- 6 # the first column with LF_Tree info
lcol <- 20 # the last column with LF_Tree info
bins <- seq(60,200,10)
Nsplit <- 4 # the number of splits (the number of cells - 1)
save_dir <- "D:/OneDrive - IATTC/IATTC/2022/LL Research/LL Tree/"
# plot lf data as maps
make.lf.map(LF1,fcol,lcol,bins,save_dir)
make.lf.map(LF1,fcol,lcol,bins,save_dir,plot_format = "pdf")
# plot mean length as maps
make.meanl.map(LF1,fcol,lcol,bins,save_dir,width=10,height=10,plot_format = "pdf")
# plot mean length as maps
make.meanl.map(LF2,fcol,lcol,bins,save_dir,width=10,height=10,plot_format = "pdf")
# plot lf data as maps
make.lf.map(LF2,fcol,lcol,bins,save_dir)
# plot lf data as maps
make.lf.map(LF1,fcol,lcol,bins,save_dir)
# loop
loop_dir <-paste0(save_dir,"loop/")
dir.create(loop_dir)
my_select_matrix <-
data.matrix(expand.grid(
split1 = 1:4,
split2 = 1:2,
split3 = 1:1,
split4 = 1:1))
LF_Tree_Loop <-
loop_regression_tree(LF1,
fcol,
lcol,
bins,
Nsplit,
save_dir = loop_dir,
select_matrix = my_select_matrix,
year = TRUE)
LF_Tree_Loop <-
loop_regression_tree(LF2,
fcol,
lcol,
bins,
Nsplit,
save_dir = loop_dir,
select_matrix = my_select_matrix,
year = TRUE)
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=5,save_dir,manual = TRUE, select = c(4,1,1,1,1))
# explore
LF_test <- LF_Tree$LF %>%
# data.frame() %>%
select(c("year","quarter","lat","lon",as.character(bins),"Flag5")) %>%
# data.frame() %>%
gather(fcol:lcol, key="Length", value="LF") %>%
mutate(Length=as.numeric(Length),yq=year + quarter/4 -0.125) %>%
group_by(Flag5,yq,Length) %>%
summarise(LF=ifelse(mean(LF)>0.25,0.25,mean(LF)))
LF_test_mean <- LF_test %>%
group_by(Flag5,yq) %>%
summarise(meanL=sum(Length*LF)/sum(LF))
ggplot() +
geom_point(aes(x=yq,y=Length,color=LF),shape = 15,data = LF_test) +
scale_color_distiller(palette = "Spectral") +
geom_line(aes(x=yq,y=meanL),data=LF_test_mean) +
facet_wrap(~Flag5,nrow=3) +
theme_bw()
make.split.map(LF_Tree$LF,Nsplit=5,save_dir,width=10,height=10,plot_name = "LL", text = TRUE)
ggplot() +
geom_point(aes(x=yq,y=Length,color=LF),shape = 15,data = LF_test) +
scale_color_distiller(palette = "Spectral") +
geom_line(aes(x=yq,y=meanL),data=LF_test_mean,size=1) +
facet_wrap(~Flag5,nrow=3) +
theme_bw()
# explore
LF_test <- LF_Tree$LF %>%
# data.frame() %>%
select(c("year","quarter","lat","lon",as.character(bins),"Flag5")) %>%
# data.frame() %>%
gather(fcol:lcol, key="Length", value="LF") %>%
mutate(Length=as.numeric(Length),yq=year + quarter/4 -0.125) %>%
group_by(Flag5,yq,Length) %>%
summarise(LF=ifelse(mean(LF)>0.2,0.2,mean(LF)))
LF_test_mean <- LF_test %>%
group_by(Flag5,yq) %>%
summarise(meanL=sum(Length*LF)/sum(LF))
ggplot() +
geom_point(aes(x=yq,y=Length,color=LF),shape = 15,data = LF_test) +
scale_color_distiller(palette = "Spectral") +
geom_line(aes(x=yq,y=meanL),data=LF_test_mean,size=1) +
facet_wrap(~Flag5,nrow=3) +
theme_bw()
LF_Tree_Loop <-
loop_regression_tree(LF2,
fcol,
lcol,
bins,
Nsplit,
save_dir = loop_dir,
select_matrix = my_select_matrix)
# plot mean length as maps
make.meanl.map(LF2,fcol,lcol,bins,save_dir,width=10,height=10,plot_format = "pdf")
LF <- LF_raw %>%
group_by(lat,lon) %>% mutate(N=length(unique(year))) %>%
filter(lat<10)
setwd("D:/OneDrive - IATTC/IATTC/2022/LL Research/")
library(FishFreqTree)
library(tidyverse)
# data prep
load(file="MOU_size_20220412.RData")
size <- data.frame(ce.d_updated)
rm(ce.d,ce.d_1,ce.d_2,ce.d_updated)
LF_raw <- size %>%
filter(species == 4, # BET
NGYO == 1, # commercial vessel
ioc == 4, # EPO
level == 4, # 1by1 spatial resolution
M_unit %in% c(6, 7)) %>% # 1/2cm length resolution)
mutate(lon = floor((X-360)/5) * 5 + 2.5,
lat = floor(Y/5) * 5 + 2.5,
year = YY,
quarter=ceiling(MM/3),
L = ifelse(M_unit==6, CLS - 1, ifelse(M_unit==7, CLS - 2, CLS - 5))) %>%
group_by(year,quarter,lat,lon,L) %>%
summarise(N = n()) %>% data.frame() %>%
spread(L,N,fill = 0)
LF <- LF_raw %>%
group_by(lat,lon) %>% mutate(N=length(unique(year))) %>%
filter(lat<10)
View(LF)
fcol <- 5 # the first column with LF_Tree info
lcol <- 197 # the first column with LF_Tree info
bins <- as.numeric(names(LF)[fcol:lcol]) # data length bins
new_bins <- c(0, seq(70,200,10))
LF1 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE)
LF2 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE, minN = 15)
fcol <- 6 # the first column with LF_Tree info
lcol <- 20 # the last column with LF_Tree info
fcol <- 6 # the first column with LF_Tree info
lcol <- 20 # the last column with LF_Tree info
bins <- seq(60,200,10)
# plot mean length as maps
make.meanl.map(LF2,fcol,lcol,bins,save_dir,width=10,height=10,plot_format = "pdf")
# best one
LF_Tree <- run_regression_tree(LF1,fcol,lcol,bins,Nsplit=4,save_dir,manual = TRUE, select = c(4,1,1,1))
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=5,save_dir,manual = TRUE, select = c(4,1,1,1,1))
setwd("D:/OneDrive - IATTC/IATTC/2022/LL Research/")
library(FishFreqTree)
library(tidyverse)
# data prep
load(file="MOU_size_20220412.RData")
size <- data.frame(ce.d_updated)
rm(ce.d,ce.d_1,ce.d_2,ce.d_updated)
LF <- size %>%
filter(species == 4, # BET
NGYO == 1, # commercial vessel
ioc == 4, # EPO
level == 4, # 1by1 spatial resolution
M_unit %in% c(6, 7)) %>% # 1/2cm length resolution)
mutate(lon = floor((X-360)/5) * 5 + 2.5,
lat = floor(Y/5) * 5 + 2.5,
year = YY,
quarter=ceiling(MM/3),
L = ifelse(M_unit==6, CLS - 1, ifelse(M_unit==7, CLS - 2, CLS - 5))) %>%
group_by(year,quarter,lat,lon,L) %>%
summarise(N = n()) %>% data.frame() %>%
spread(L,N,fill = 0)
fcol <- 5 # the first column with LF_Tree info
lcol <- 197 # the first column with LF_Tree info
bins <- as.numeric(names(LF)[fcol:lcol]) # data length bins
new_bins <- c(0, seq(80,190,10))
LF1 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE)
LF2 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE, minN = 14) %>%
filter(lat<10)
LF2 <- LF2 %>%
group_by(lat,lon) %>% mutate(N=length(unique(year))) %>%
filter(N>2)
fcol <- 6 # the first column with LF_Tree info
lcol <- 18 # the last column with LF_Tree info
bins <- seq(70,190,10)
Nsplit <- 4 # the number of splits (the number of cells - 1)
save_dir <- "D:/OneDrive - IATTC/IATTC/2022/LL Research/LL Tree/"
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=6,save_dir,manual = TRUE, select = c(4,1,1,1,1,1))
make.split.map(LF_Tree$LF,Nsplit=6,save_dir,width=10,height=10,plot_name = "LL", text = TRUE)
devtools::document()
devtools::document()
devtools::document()
library(FishFreqTree)
setwd("D:/OneDrive - IATTC/IATTC/2022/LL Research/")
library(FishFreqTree)
library(tidyverse)
# data prep
load(file="MOU_size_20220412.RData")
size <- data.frame(ce.d_updated)
rm(ce.d,ce.d_1,ce.d_2,ce.d_updated)
LF <- size %>%
filter(species == 4, # BET
NGYO == 1, # commercial vessel
ioc == 4, # EPO
level == 4, # 1by1 spatial resolution
M_unit %in% c(6, 7)) %>% # 1/2cm length resolution)
mutate(lon = floor((X-360)/5) * 5 + 2.5,
lat = floor(Y/5) * 5 + 2.5,
year = YY,
quarter=ceiling(MM/3),
L = ifelse(M_unit==6, CLS - 1, ifelse(M_unit==7, CLS - 2, CLS - 5))) %>%
group_by(year,quarter,lat,lon,L) %>%
summarise(N = n()) %>% data.frame() %>%
spread(L,N,fill = 0)
fcol <- 5 # the first column with LF_Tree info
lcol <- 197 # the first column with LF_Tree info
bins <- as.numeric(names(LF)[fcol:lcol]) # data length bins
new_bins <- c(0, seq(80,190,10))
LF1 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE)
LF2 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE, minN = 14) %>%
filter(lat<10)
LF2 <- LF2 %>%
group_by(lat,lon) %>% mutate(N=length(unique(year))) %>%
filter(N>2)
# divide by the mean for the year-quarter
# LF3 <- lf.demean(LF1, fcol = 6, lcol = 20, bins = new_bins)
fcol <- 6 # the first column with LF_Tree info
lcol <- 18 # the last column with LF_Tree info
bins <- seq(70,190,10)
Nsplit <- 4 # the number of splits (the number of cells - 1)
save_dir <- "D:/OneDrive - IATTC/IATTC/2022/LL Research/LL Tree/"
# best one
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit,save_dir,manual = TRUE, select = c(4,1,1,1))
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
evaluate_regression_tree(LF2,fcol,lcol,Flag4,bins,save_dir,folder_name="test")
?
evaluate_regression_tree
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
evaluate_regression_tree(LF2,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
evaluate_regression_tree(LF2,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
library(FishFreqTree)
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
evaluate_regression_tree(LF2,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
library(FishFreqTree)
LF
Lf2[["Flag5"]]
LF2[["Flag5"]]
LF2[["Flag4"]]
LF2[[Flag4"]]
LF2[[Flag4]]
LF2
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
LF_test <- LF_Tree$LF
evaluate_regression_tree(LF_test,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
library(FishFreqTree)
evaluate_regression_tree(LF_test,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
evaluate_regression_tree(LF_test,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
library(FishFreqTree)
evaluate_regression_tree(LF_test,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
LF_test$Flag4
LF <- LF_test
Flagcol <- "Flag4"
folder_name="test"
# make sure bins are consistent with LF input
if((lcol-fcol+1)!= length(bins)) stop("Error! The number of bins does not match the number of LF columns specified")
else names(LF)[fcol:lcol] <- bins
LF$dummy <- FALSE
# make sure LF sums to 1 for each row
row_sum <- apply(LF[which(LF$dummy==FALSE),fcol:lcol],1,sum)
if(sum(abs(row_sum-1)>0.05)>0) {
plot(row_sum)
# print(which(abs(row_sum-1)>0.1))
stop("Error! LF does not sum to 1 for at least one row.")
}
if(is.null(LF[["weight"]])==TRUE) LF$weight <- 1
else print("Weight is used to compute the percentage of varaibility explained!")
unlink(paste0(save_dir,folder_name), recursive = TRUE)
dir.create(paste0(save_dir,folder_name))
e0 <- get.klderror.null(as.matrix(LF[LF$dummy==FALSE,fcol:lcol]),LF$weight[LF$dummy==FALSE]) # null (no stratification)
e <- 0
for (i in unique(LF[[Flagcol]])) {
print(i)
e <- e + get.klderror.null(as.matrix(LF[LF[[Flagcol]]==i&LF$dummy==FALSE,fcol:lcol]),LF$weight[LF[[Flagcol]]==i&LF$dummy==FALSE])
}
library(FishFreqTree)
library(FishFreqTree)
evaluate_regression_tree(LF_test,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
library(FishFreqTree)
evaluate_regression_tree(LF_test,fcol,lcol,"Flag4",bins,save_dir,folder_name="test")
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=6,save_dir,manual = TRUE, select = c(4,1,1,1,1,1))
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
LF_test <- LF_Tree$LF
evaluate_regression_tree(LF_test,fcol,lcol,"Flag6",bins,save_dir,folder_name="test")
library(FishFreqTree)
evaluate_regression_tree(LF_test,fcol,lcol,"Flag6",bins,save_dir,folder_name="test")
library(FishFreqTree)
evaluate_regression_tree(LF_test,fcol,lcol,"Flag6",bins,save_dir,folder_name="test")
LF_test$Flag6[which(LF_test$Flag6==5)] <- 3
evaluate_regression_tree(LF_test,fcol,lcol,"Flag6",bins,save_dir,folder_name="test")
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=5,save_dir,manual = TRUE, select = c(4,1,1,1,1))
devtools::document()
?readOGR
install.packages("rgdal")
#DOWNLOAD FROM HERE:
#http://www.marineregions.org/download_file.php?name=World_EEZ_v10_20180221.zip
# Reference
#Flanders Marine Institute (2018). Maritime Boundaries Geodatabase: Maritime Boundaries and Exclusive Economic Zones (200NM), version 10. Available online at http://www.marineregions.org/ https://doi.org/10.14284/312
#put here the diectory where the EEZ data is
#EEZ.path<-"C:/Users/cminte/Documents/Carolina2018/Meetings/LONGLINE workshop/Oc Pacific 5 by 5 data/Maps/World_EEZ_v10_20180221"
EEZ.path<-"C:/Users/haiku/Desktop/"
EEZ.file<-"eez_boundaries_v10.shp"
dat.eez <- readOGR(dsn = EEZ.path,layer = file_path_sans_ext(EEZ.file))
library(rgdal)
dat.eez <- readOGR(dsn = EEZ.path,layer = file_path_sans_ext(EEZ.file))
setwd("D:/OneDrive - IATTC/IATTC/2022/LL Research/")
library(FishFreqTree)
library(tidyverse)
# data prep
load(file="MOU_size_20220412.RData")
size <- data.frame(ce.d_updated)
rm(ce.d,ce.d_1,ce.d_2,ce.d_updated)
LF <- size %>%
filter(species == 4, # BET
NGYO == 1, # commercial vessel
ioc == 4, # EPO
level == 4, # 1by1 spatial resolution
M_unit %in% c(6, 7)) %>% # 1/2cm length resolution)
mutate(lon = floor((X-360)/5) * 5 + 2.5,
lat = floor(Y/5) * 5 + 2.5,
year = YY,
quarter=ceiling(MM/3),
L = ifelse(M_unit==6, CLS - 1, ifelse(M_unit==7, CLS - 2, CLS - 5))) %>%
group_by(year,quarter,lat,lon,L) %>%
summarise(N = n()) %>% data.frame() %>%
spread(L,N,fill = 0)
fcol <- 5 # the first column with LF_Tree info
lcol <- 197 # the first column with LF_Tree info
bins <- as.numeric(names(LF)[fcol:lcol]) # data length bins
new_bins <- c(0, seq(80,190,10))
LF1 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE)
LF2 <- lf.aggregate(LF,fcol,lcol,bins,new_bins,LengthOnly = TRUE, minN = 14) %>%
filter(lat<10)
LF2 <- LF2 %>%
group_by(lat,lon) %>% mutate(N=length(unique(year))) %>%
filter(N>2)
# divide by the mean for the year-quarter
# LF3 <- lf.demean(LF1, fcol = 6, lcol = 20, bins = new_bins)
fcol <- 6 # the first column with LF_Tree info
lcol <- 18 # the last column with LF_Tree info
bins <- seq(70,190,10)
Nsplit <- 6 # the number of splits (the number of cells - 1)
save_dir <- "D:/OneDrive - IATTC/IATTC/2022/LL Research/LL Tree/"
# plot lf data as maps
make.lf.map(LF2,fcol,lcol,bins,save_dir)
# make.lf.map(LF1,fcol,lcol,bins,save_dir,plot_format = "pdf")
# plot mean length as maps
make.meanl.map(LF2,fcol,lcol,bins,save_dir,width=10,height=10)
# loop
loop_dir <-paste0(save_dir,"loop/")
dir.create(loop_dir)
my_select_matrix <-
data.matrix(expand.grid(
split1 = 1:4,
split2 = 1:3,
split3 = 1:2,
split4 = 1:1,
split5 = 1:1,
split6 = 1:1))
LF_Tree_Loop <-
loop_regression_tree(LF2,
fcol,
lcol,
bins,
Nsplit,
save_dir = loop_dir,
select_matrix = my_select_matrix)
# best one
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=3,save_dir,manual = TRUE, select = c(4,1,1))
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=5,save_dir,manual = TRUE, select = c(4,1,1,1,1))
LF_Tree <- run_regression_tree(LF2,fcol,lcol,bins,Nsplit=6,save_dir,manual = TRUE, select = c(4,1,1,1,1,1))
make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "LL", text = TRUE)
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
LF_test <- LF_Tree$LF
LF_test$Flag6[which(LF_test$Flag6==5)] <- 3
evaluate_regression_tree(LF_test,fcol,lcol,"Flag6",bins,save_dir,folder_name="test")
# explore
LF_test <- LF_Tree$LF %>%
# data.frame() %>%
select(c("year","quarter","lat","lon",as.character(bins),"Flag3")) %>%
# data.frame() %>%
gather(fcol:lcol - 1, key="Length", value="LF") %>%
mutate(Length=as.numeric(Length),yq=year + quarter/4 -0.125) %>%
group_by(Flag3,yq,Length) %>%
summarise(LF=ifelse(mean(LF)>0.2,0.2,mean(LF)))
LF_test_mean <- LF_test %>%
group_by(Flag3,yq) %>%
summarise(meanL=sum(Length*LF)/sum(LF))
ggplot() +
geom_point(aes(x=yq,y=Length,color=LF),shape = 15,data = LF_test) +
scale_color_distiller(palette = "Spectral") +
geom_line(aes(x=yq,y=meanL),data=LF_test_mean,size=1) +
facet_wrap(~Flag3,nrow=6) +
theme_bw()
ggplot() +
geom_point(aes(x=yq,y=meanL,color=factor(Flag3)),data=LF_test_mean,size=2,alpha=0.25) +
geom_smooth(aes(x=yq,y=meanL,color=factor(Flag3)),data=LF_test_mean,se=FALSE,span=0.5) +
theme_bw()
make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "LL", text = TRUE)
# make.split.map(LF_Tree$LF,Nsplit=3,save_dir,width=10,height=10,plot_name = "3")
LF_test <- LF_Tree$LF
LF_test$Flag6[which(LF_test$Flag6==5)] <- 3
# devtools::install_github('HaikunXu/RegressionTree',ref='main')
library(FishFreqTree)
require(tidyverse) # it is required for some supporting functions
# check the example LF data
head(LF)
fcol <- 5 # the first column with LF info
lcol <- 17 # the last column with LF info
bins <- seq(30,150,10) # length of bins as a numeric vector
Nsplit <- 3 # the number of splits (the number of cells - 1)
# the directory where results will be saved
save_dir <- "D:/OneDrive - IATTC/Git/FishFreqTree/demo/"
# plot lf data as maps
make.lf.map(LF, fcol, lcol, bins, save_dir)
# devtools::install_github('HaikunXu/RegressionTree',ref='main')
library(FishFreqTree)
require(tidyverse) # it is required for some supporting functions
# check the example LF data
head(LF)
fcol <- 5 # the first column with LF info
lcol <- 17 # the last column with LF info
bins <- seq(30,150,10) # length of bins as a numeric vector
Nsplit <- 3 # the number of splits (the number of cells - 1)
# the directory where results will be saved
save_dir <- "D:/OneDrive - IATTC/Git/FishFreqTree/demo/"
# plot lf data as maps
make.lf.map(LF, fcol, lcol, bins, save_dir)
# devtools::install_github('HaikunXu/RegressionTree',ref='main')
library(FishFreqTree)
require(tidyverse) # it is required for some supporting functions
# check the example LF data
head(LF)
fcol <- 5 # the first column with LF info
lcol <- 17 # the last column with LF info
bins <- seq(30,150,10) # length of bins as a numeric vector
Nsplit <- 3 # the number of splits (the number of cells - 1)
# the directory where results will be saved
save_dir <- "D:/OneDrive - IATTC/Git/FishFreqTree/demo/"
# plot lf data as maps
make.lf.map(LF, fcol, lcol, bins, save_dir)
# devtools::install_github('HaikunXu/RegressionTree',ref='main')
library(FishFreqTree)
require(tidyverse) # it is required for some supporting functions
# check the example LF data
head(LF)
fcol <- 5 # the first column with LF info
lcol <- 17 # the last column with LF info
bins <- seq(30,150,10) # length of bins as a numeric vector
Nsplit <- 3 # the number of splits (the number of cells - 1)
# the directory where results will be saved
save_dir <- "D:/OneDrive - IATTC/Git/FishFreqTree/manual/"
# plot lf data as maps
make.lf.map(LF, fcol, lcol, bins, save_dir)
# plot mean length as maps
make.meanl.map(LF, fcol, lcol, bins, save_dir, s = 20)
LF_Tree <- run_regression_tree(LF, fcol, lcol, bins, Nsplit, save_dir)
head(LF_Tree$LF)
# a summary of the three splits
LF_Tree$Record
# Color-code the 4 fisheries in the map
make.split.map(LF_Tree$LF, Nsplit, save_dir)
# or text-code the 4 fisheries in the map (works better when quarterly splits exist)
make.split.map(LF_Tree$LF, Nsplit, save_dir, text = TRUE)
LF_Tree2 <-
run_regression_tree(LF,
fcol,
lcol,
bins,
Nsplit,
save_dir,
manual = TRUE,
select = c(1, 2, 1))
# a summary of the three splits
LF_Tree2$Record
# map the 4 cells
make.split.map(LF_Tree2$LF, Nsplit, save_dir)
# create a directory to save results from the loop function
loop_dir <- paste0(save_dir,"loop/")
dir.create(loop_dir)
# build the selection matrix
my_select_matrix <-
data.matrix(expand.grid(
split1 = 1:2,
split2 = 1:2,
split3 = 1:2
))
# check the selction matrix
my_select_matrix
LF_Tree_Loop <-
loop_regression_tree(LF,
fcol,
lcol,
bins,
Nsplit,
save_dir = loop_dir,
select_matrix = my_select_matrix)
LF_Tree3 <- LF_Tree
LF_Tree3$LF$Flag3 <- ifelse(LF_Tree3$LF$Flag3 > 2, LF_Tree3$LF$Flag3, 1)
evaluate_regression_tree(LF_test,fcol,lcol,"Flag6",bins,save_dir,folder_name="test")
evaluate_regression_tree(LF_Tree3,fcol,lcol,"Flag3",bins,save_dir,folder_name="test")
LF_Tree3 <- LF_Tree$LF
LF_Tree3$Flag3 <- ifelse(LF_Tree3$Flag3 > 2, LF_Tree3$Flag3, 1)
evaluate_regression_tree(LF_Tree3,fcol,lcol,"Flag3",bins,save_dir,folder_name="test")
library(FishFreqTree)
LF_Tree3 <- LF_Tree$LF
LF_Tree3$Flag3 <- ifelse(LF_Tree3$Flag3 > 2, LF_Tree3$Flag3, 1)
#
make.split.map(LF_Tree3, 2, save_dir)
evaluate_regression_tree(LF_Tree3,fcol,lcol,"Flag3",bins,save_dir,folder_name="test")
#
make.split.map(LF_Tree3, 3, save_dir)
